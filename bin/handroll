#!/usr/bin/env node
'use strict';

var args;
var error;
var fs;
var handroll;
var opt;
var opts;
var os;
var usage;
var version;

fs = require('fs');

os = require('os');

handroll = require('../');

error = function(message) {
  console.error(message);
  return process.exit(1);
};

version = function() {
  console.log((require('../package.json')).version);
  return process.exit(0);
};

usage = function() {
  console.log("handroll <entry> [options]\n\nOptions:\n  --format      Format to output\n  --commonjs    Enable CommonJS support\n  --source-map  Enable source map support\n  --version     Print version information\n  --help        Print this usage");
  return process.exit(0);
};

opts = {
  commonjs: false,
  entry: null,
  format: 'es',
  sourceMap: false
};

args = process.argv.slice(2);

opts.entry = args.shift();

while (opt = args.shift()) {
  switch (opt) {
    case '--format':
      opts.format = args.shift();
      break;
    case '--commonjs':
      opts.commonjs = true;
      break;
    case '--source-map':
      opts.sourceMap = false;
      break;
    default:
      error("Unrecognized option: '" + opt + "'");
  }
}

handroll.bundle({
  entry: opts.entry,
  commonjs: opts.commonjs
}).then(function(bundle) {
  var result;
  result = bundle.write({
    format: opts.format
  });
  return console.log(result.code);
})["catch"](function(err) {
  return console.log(err.stack);
});
